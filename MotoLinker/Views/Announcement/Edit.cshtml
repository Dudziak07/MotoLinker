@model MotoLinker.Models.Announcement

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Edytuj ogłoszenie";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Edit" method="post">
    <h3>@Localizer["Categories"]</h3>
    <div class="form-group">
        @foreach (var category in ViewBag.Categories as List<MotoLinker.Models.Category>)
        {
            <div class="form-check">
                <input type="checkbox" name="SelectedCategoryIds" value="@category.CategoryId" class="form-check-input"
                @(Model.SelectedCategoryIds != null && Model.SelectedCategoryIds.Contains(category.CategoryId) ? "checked" : "") />
                <label class="form-check-label">@category.Name</label>
            </div>
        }
    </div>
    <div class="form-group">
        <label asp-for="Title">@Localizer["Title"]</label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description">@Localizer["Description"]</label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price">@Localizer["Price"]</label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Location">@Localizer["Location"]</label>
        <input asp-for="Location" class="form-control" />
        <span asp-validation-for="Location" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Brand">@Localizer["Brand"]</label>
        <input asp-for="Brand" class="form-control" />
        <span asp-validation-for="Brand" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Model">@Localizer["Model"]</label>
        <input asp-for="Model" class="form-control" />
        <span asp-validation-for="Model" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ProductionYear">@Localizer["ProductionYear"]</label>
        <input asp-for="ProductionYear" class="form-control" />
        <span asp-validation-for="ProductionYear" class="text-danger"></span>
    </div>

    <h3>@Localizer["Attributes"]</h3>
    <div id="attributes-container">
        @foreach (var attr in Model.Attributes)
        {
            <div class="form-group">
                <label>@attr.Key</label>
                @switch (attr.Type)
                {
                    case AttributeType.ShortText:
                        <input type="text" name="Attributes[@Model.Attributes.IndexOf(attr)].Value" value="@attr.Value" class="form-control" />
                        break;
                    case AttributeType.LongText:
                        <textarea name="Attributes[@Model.Attributes.IndexOf(attr)].Value" class="form-control">@attr.Value</textarea>
                        break;
                    case AttributeType.Integer:
                        <input type="number" name="Attributes[@Model.Attributes.IndexOf(attr)].Value" value="@attr.Value" class="form-control" />
                        break;
                    case AttributeType.Real:
                        <input type="number" step="0.01" name="Attributes[@Model.Attributes.IndexOf(attr)].Value" value="@attr.Value" class="form-control" />
                        break;
                    case AttributeType.Boolean:
                        <input type="checkbox" name="Attributes[@Model.Attributes.IndexOf(attr)].Value" value="true" @(attr.Value == "true" ? "checked" : "") />
                        break;
                }
            </div>
        }
    </div>

    <input type="hidden" asp-for="AnnouncementId" />
    <button type="submit" class="btn btn-primary">@Localizer["EditAdButton"]</button>
    <a asp-action="List" class="btn btn-secondary">@Localizer["Cancel"]</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let attributeIndex = 1;
        document.getElementById('add-attribute').addEventListener('click', () => {
            const container = document.getElementById('attribute-container');
            const template = `
                <div class="form-group">
                    <label>Klucz</label>
                    <input type="text" name="attributes[${attributeIndex}].Key" class="form-control" />
                    <label>Wartość</label>
                    <input type="text" name="attributes[${attributeIndex}].Value" class="form-control" />
                    <label>Typ</label>
                    <select name="attributes[${attributeIndex}].Type" class="form-control">
                        ${Array.from(document.querySelector('select[name="attributes[0].Type"]').options).map(
                            option => `<option value="${option.value}">${option.text}</option>`
                        ).join('')}
                    </select>
                </div>
            `;
            container.insertAdjacentHTML('beforeend', template);
            attributeIndex++;
        });
    </script>
}